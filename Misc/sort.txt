typedef tlang elem_t;
//quick sort
int cmp(const void *t1, const void *t2) {
	elem_t *a, *b; 
	a = (elem_t*)t1;
	b = (elem_t*)t2;
	if (strcmp((*a).m, (*b).m) > 0) return 1;
	if (strcmp((*a).m, (*b).m) < 0) return -1;
	return 0; 
}
qsort(dir, index, sizeof(tlang), cmp);

//insertion sort
typedef int elem_t;

void insertion_sort(elem_t list[], int n) {
	int i, j;
	elem_t next;
	for (i = 1; i < n; i ++) {
		next = list[i];
		for (j = i - 1; j >= 0 && next < list[j]; j --)
			list[j + 1] = list[j];
		list[j + 1] = next;
	}
}
